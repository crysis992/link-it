// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Target {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  shortId   String   @unique
  target    String
  visits    Int      @default(0)
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String?  @db.ObjectId
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  username       String?   @unique
  bio            String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  profileImage   String?
  coverImage     String?
  hashedPassword String?
  role           String    @default("user")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  targets        Target[]
  socials        Social[]

  userlinks LinkTree?
}

type Social {
  provider String
  username String
  public   Boolean
}

enum Role {
  USER
  ADMIN
}

model LinkTree {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  owner         User        @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId       String      @unique @db.ObjectId
  theme         String      @default("default")
  sensitive     Boolean     @default(false)
  sensitiveType String?
  entries       TreeEntry[]
  statistics    Statistic[]
}

model TreeEntry {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  destination String
  order       Int         @default(1)
  tree        LinkTree    @relation(fields: [treeId], references: [id], onDelete: Cascade)
  treeId      String      @db.ObjectId
  Statistic   Statistic[]
}

model Statistic {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  referral  String?
  country   String?
  ip        String
  entry     TreeEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)
  entryId   String    @db.ObjectId
  visitedAt DateTime  @default(now())
  tree      LinkTree  @relation(fields: [treeId], references: [id], onDelete: Cascade)
  treeId    String    @db.ObjectId
}
